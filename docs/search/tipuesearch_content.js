var tipuesearch = {"pages":[{"title":"Website Install","text":"    Summary  A script to help with installing dependencies and deploying non-versioned files for a website.  A Drupal website has files that do not end up in version control: .htaccess, settings.local.php, etc.  This script provides a means of putting those in source control by storing environment-specific versions of them in a directory and then copying the appropriate version to it's runtime location.  Visit https:\/\/aklump.github.io\/website-install for full documentation.  Quick Start   Install in your repository root using cloudy pm-install aklump\/install Open bin\/config\/install.yml and modify as needed. Open bin\/config\/install.local.yml and ...   Requirements  You must have Cloudy installed on your system to install this package.  Installation  The installation script above will generate the following structure where . is your repository root.  . \u251c\u2500\u2500 bin \u2502\u00a0\u00a0 \u251c\u2500\u2500 install -&gt; ..\/opt\/install\/install.sh \u2502\u00a0\u00a0 \u2514\u2500\u2500 config \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml \u2502\u00a0\u00a0     \u2514\u2500\u2500 install.local.yml \u251c\u2500\u2500 opt \u2502   \u251c\u2500\u2500 cloudy \u2502   \u2514\u2500\u2500 aklump \u2502       \u2514\u2500\u2500 install \u2514\u2500\u2500 {public web root}   To Update   Update to the latest version from your repo root: cloudy pm-update aklump\/install   Configuration Files       Filename   Description   VCS       install.yml   Configuration shared across all server environments: prod, staging, dev   yes     install.local.yml   Configuration overrides for a single environment; not version controlled.   no     Custom Configuration  The basic configuration in install.yml consists of two lists.  The master files and the destination paths.  Notice the use of the token __ROLE, which will be substituted for the role.  master_dir: install\/default master_files:     - install.__ROLE.yml installed_files:     - bin\/config\/install.local.yml   Environment specific options can be set in install.local.yml:       option   description       use_sudo   Set to true to execute permissions with sudo.     composer_self_update   Set to true to run composer self-update, should be false on production environments, generally.     drupal_config_import   Set to true to automatically run drush config import     Usage  In the example above we would expect to find the following in source control:  . \u251c\u2500\u2500 bin \u2502\u00a0\u00a0 \u2514\u2500\u2500 config \u2514\u2500\u2500 install     \u2514\u2500\u2500 default         \u251c\u2500\u2500 install.dev.yml         \u251c\u2500\u2500 install.prod.yml         \u2514\u2500\u2500 install.staging.yml   When we ran this script with prod then we would have the following, where bin\/config\/install.local.yml is a copy of install\/default\/install.prod.yml.  . \u251c\u2500\u2500 bin \u2502\u00a0\u00a0 \u2514\u2500\u2500 config \u2502\u00a0\u00a0     \u2514\u2500\u2500 install.local.yml \u2514\u2500\u2500 install     \u2514\u2500\u2500 default         \u251c\u2500\u2500 install.dev.yml         \u251c\u2500\u2500 install.prod.yml         \u2514\u2500\u2500 install.staging.yml    To see all commands use .\/bin\/install help   Contributing  If you find this project useful... please consider making a donation. ","tags":"","url":"README.html"},{"title":"Tasklist","text":"  - [ ] ld--roadmap: Fix the delay caused by deleting files at beginning of compile. - [ ] ld--todos: a task list item - [ ] ld--todos: a task list item @w-10 - [ ] demos--md_extra: Todo items will get aggregated automatically @w10 - [ ] ld--todos: a task list item @w10 - [ ] ld--todos: a task list item @w10.1  ","tags":"","url":"_tasklist.html"},{"title":"Search Results","text":" ","tags":"","url":"search--results.html"}]};
